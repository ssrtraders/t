import boto3
from botocore.exceptions import ClientError

def log_capture(file_name, write_text):
    # S3 bucket where you want to write the text
    bucket_name = "bucket_test_name"

    # S3 key (path) where you want to write the text
    key = f"logpath/{file_name}.txt"

    # S3 file path
    s3_file = f"s3://{bucket_name}/{key}"
    
    # Initialize S3 client
    s3 = boto3.client('s3')
    
    try:
        # Check if the file already exists
        response = s3.head_object(Bucket=bucket_name, Key=key)
        
        # If the file exists, append text to it
        existing_text = response.get('Body', {}).read().decode('utf-8')
        new_text = existing_text + '\n' + write_text
        s3.put_object(Bucket=bucket_name, Key=key, Body=new_text)
        print("Text appended to existing file:", s3_file)
    except ClientError as e:
        if e.response['Error']['Code'] == '404':
            # If the file does not exist, create a new file and write text to it
            s3.put_object(Bucket=bucket_name, Key=key, Body=write_text)
            print("Text written to new file:", s3_file)
        else:
            # If the error is not due to file not found, raise it
            raise e

# Example usage
file_name = "log"  # Variable containing the name of the file
write_text = "comment check here"
log_capture(file_name, write_text)
